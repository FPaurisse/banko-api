type Mutation {
    reset: Boolean
}

# SETTING
type Query {
    getSettingByUser(userId: String!): Setting
}

type Mutation {
    createSetting(
        userId: String!,
        accountIdByDefault: String
    ): Setting
    
    updateSetting(
        userId: String!,
        accountIdByDefault: String
    ): Setting
    
    deleteSetting(
        userId: String!, 
    ): Setting

    deleteAllSettings: Boolean
}

type Setting {
    _id: ID!
    userId: String!,
    accountIdByDefault: String!
}

# CATEGORY
type Query {
    getCategory(_id: ID!): Category
    getCategoriesByAccount(accountId: String!): [Category!]!
}

type Mutation {
    createCategory(
        title: String!,
        accountId: String!,
        userId: String!
    ): Category
    
    updateCategory(
        _id: ID!, 
        title: String!
    ): Category
    
    deleteCategory(
        _id: ID!, 
    ): Category

    deleteAllCategories: Boolean
}

type Category {
    _id: ID!
    title: String!,
    accountId: ID!,
    userId: ID!
}

# ACCOUNT
type Query {
    getAccount(_id: ID!): Account
    getAccountsByUser(userId: String!): [Account!]!
}

type Mutation {
    createAccount(
        title: String!,
        userId: String!
    ): Account
    
    updateAccount(
        _id: ID!, 
        title: String!
    ): Account
    
    deleteAccount(
        _id: ID!, 
    ): Account

    deleteAllAccounts: Boolean
}

type Account {
    _id: ID!
    title: String!,
    userId: ID!
}

# OPERATION
type Query {
    getOperation(_id: ID!): Operation
    getOperationsByPeriod(month: String!, year: String!, accountId: String!): [Operation!]!
    getOperationsToCalculate(month: String!, year: String!, accountId: String!): [Operation!]!
}

type Mutation {
    createOperation(
        title: String!,
        amount: String!,
        categories: [String!]!,
        date: String!,
        isPassed: Boolean!,
        isCredit: Boolean!,
        accountId: String!,
        userId: String!
    ): Operation
    
    updateOperation(
        _id: ID!, 
        title: String,
        categories: [String!],
        amount: String,
        date: String,
        isPassed: Boolean,
        isCredit: Boolean
    ): Operation

    updateSelectedOperations(
        selected: [ID!]!,
        isPassed: Boolean
    ): Operation
    
    deleteOperation(
        _id: ID!,
    ): Operation

    deleteSelectedOperations(
        selected: [ID!]!
    ): Operation

    deleteAllOperations: Boolean
}

type Operation {
    _id: ID!
    selected: [ID],
    title: String!,
    categories: [String!]!,
    amount: String!,
    date: String!,
    isPassed: Boolean!,
    isCredit: Boolean!,
    accountId: String!,
    userId: String!
}

































# PROFILE 



type OperationBis {
    _id: ID,
    selected: [ID!],
    title: String,
    categories: [String!],
    amount: String,
    date: String,
    isPassed: Boolean,
    isCredit: Boolean,
    accountId: String
}

type CategoryBis {
    _id: ID,
    title: String
}

type GuestBis {
    _id: ID,
    email: String
}

type AccountBis {
    _id: ID,
    title: String,
    operations: [OperationBis!],
    categories: [CategoryBis!],
    guests: [GuestBis]
}

type SettingsBis {
    _id: ID,
    primaryAccount: String,
    shareMyProfile: Boolean
}

type Profile {
    _id: ID!,
    keycloakId: String,
    firstname: String,
    lastname: String,
    fullname: String,
    username: String,
    email: String,
    isConfirmed: Boolean,
    settings: SettingsBis,
    accounts: [AccountBis!]
}

type Query {
    getProfile(_id: ID!): Profile
}

type Mutation {
    createProfile(
        keycloakId: String,
        firstname: String,
        lastname: String,
        fullname: String,
        username: String,
        email: String,
        isConfirmed: Boolean
    ): Profile

    createAccountBis(
        profileId: ID!,
        title: String
    ): Profile

    updateAccountBis(
        profileId: ID!,
        accountId: ID!,
        title: String
    ): Profile

    deleteAccountBis(
        profileId: ID!,
        accountId: ID!
    ): Profile

    createOperationBis(
        profileId: ID!,
        accountId: ID!,
        title: String!,
        amount: String!
    ): Profile

    updateOperationBis(
        profileId: ID!,
        accountId: ID!,
        operationId: ID!,
        title: String,
        amount: String
    ): Profile

    deleteOperationBis(
        profileId: ID!,
        accountId: ID!,
        operationId: ID!
    ): Profile

    updateProfile(
        _id: ID!,
        keycloakId: String,
        firstname: String,
        lastname: String,
        fullname: String,
        username: String,
        email: String,
        isConfirmed: Boolean
    ): Profile

    deleteProfile(
        _id: ID!
    ): Profile
}
